---
import { render } from 'astro:content';

import type { CollectionEntry } from 'astro:content';

import BaseSite from '@/components/base/base-site.astro';
import ContentCollectionLink from '@/components/content/content-collection-link.astro';
import ContentDate from '@/components/content/content-date.astro';
import ContentHeader from '@/components/content/content-header.astro';
import ContentSectionRegions from '@/components/content/content-section-regions.astro';
import ContentSectionThemes from '@/components/content/content-section-themes.astro';
import ImageHero from '@/components/image-hero/image-hero.astro';
import DividedItem from '@/components/parts/divided-item.astro';
import ProseBody from '@/components/parts/prose-body.astro';
import { getSeoArticleProps, getSeoImageProps } from '@/lib/utils/seo';

interface Props {
	entry: CollectionEntry<'ephemera'>;
}

const { entry } = Astro.props;

const {
	data: { title, titleAlt, description, dateCreated, dateUpdated, imageFeatured, imageHero },
} = entry;

const { Content } = await render(entry);

const regionIds = entry.data.regions?.map(({ id }) => id);
const themeIds = entry.data.themes?.map(({ id }) => id);

// TODO: convert `<!-- ${CONTENT_EXCERPT_IDENTIFIER} -->` to an anchor
---

<BaseSite
	meta={{
		title: titleAlt ? `${title} (${titleAlt})` : title,
		description: description ?? entry.body ?? undefined,
		image: getSeoImageProps({
			...(imageFeatured ? { id: entry.id } : { fallback: 'og-image-ephemera' }),
			alt: title,
		}),
		...getSeoArticleProps({ dateCreated, dateUpdated }),
	}}
	hasHeroImage={!!imageHero}
	hasReadingBar={true}
>
	<article>
		{
			imageHero ? (
				<ImageHero imageId={imageHero} alt={title} class="sm:mb-small">
					<ContentHeader showFeatured={true}>
						<Fragment slot="header-title">{title}</Fragment>
						<Fragment slot="header-title-alt">{titleAlt}</Fragment>
						<Fragment slot="header-subtitle">
							<DividedItem dividerColor="hero">
								<ContentCollectionLink collection="ephemera" showFeatured={true} />
							</DividedItem>
							<DividedItem dividerColor="hero">
								<ContentDate date={dateCreated} dateUpdated={dateUpdated} datePreset="long" />
							</DividedItem>
						</Fragment>
					</ContentHeader>
				</ImageHero>
			) : (
				<ContentHeader>
					<Fragment slot="header-title">{title}</Fragment>
					<Fragment slot="header-title-alt">{titleAlt}</Fragment>
					<Fragment slot="header-subtitle">
						<DividedItem>
							<ContentCollectionLink collection="ephemera" />
						</DividedItem>
						<DividedItem>
							<ContentDate date={dateCreated} dateUpdated={dateUpdated} datePreset="long" />
						</DividedItem>
					</Fragment>
				</ContentHeader>
			)
		}
		<ProseBody class="pb-small" data-reading-frame><Content /></ProseBody>
		<ContentSectionThemes themeIds={themeIds} />
		<ContentSectionRegions regionIds={regionIds} />
	</article>
</BaseSite>
