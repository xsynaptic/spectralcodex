---
import type { RemoteImageProps } from 'astro:assets';

import { Image } from 'astro:assets';

import ImageHeroFrame from '#components/image-hero/image-hero-frame.astro';
import ImagePlaceholder from '#components/parts/image-placeholder.astro';
import { IMAGE_FORMAT, IMAGE_QUALITY } from '#constants.ts';
import { getImageById } from '#lib/collections/images/utils.ts';
import { getImageSrcsetWidths } from '#lib/image/image-layout.ts';
import { getImagePlaceholderDataUrlHq } from '#lib/image/image-placeholder.ts';
import { sanitizeAltAttribute } from '#lib/utils/text.ts';

interface Props {
	imageId: string;
	alt: string;
	class?: string | undefined;
}

const { imageId, alt, class: className } = Astro.props;

const imageEntry = await getImageById(imageId);

const imageProps = imageEntry
	? ({
			src: imageEntry.data.src,
			alt: sanitizeAltAttribute(alt),
			width: imageEntry.data.width,
			height: imageEntry.data.height,
			widths: getImageSrcsetWidths({ maxWidth: imageEntry.data.width }),
			sizes: '100vw',
			format: IMAGE_FORMAT,
			quality: IMAGE_QUALITY,
		} satisfies RemoteImageProps)
	: undefined;

const placeholder = imageEntry
	? await getImagePlaceholderDataUrlHq(imageEntry.data.src)
	: undefined;
---

{
	imageProps ? (
		<ImageHeroFrame class:list={[className, 'overflow-hidden']}>
			<ImagePlaceholder placeholder={placeholder}>
				<Image
					class:list={[
						'z-10 max-h-screen min-h-[400px] w-full object-cover object-center text-sm text-transparent xl:min-h-screen',
						'aspect-[3/2] sm:aspect-[5/4] md:aspect-[3/2] lg:aspect-[16/9] xl:aspect-auto',
					]}
					loading="eager"
					data-pagefind-meta="image[src], image_alt[alt]"
					{...imageProps}
				/>
			</ImagePlaceholder>
			<slot />
		</ImageHeroFrame>
	) : undefined
}
