---
import type { RemoteImageProps } from 'astro:assets';

import { Image } from 'astro:assets';

import type { ImageFeaturedObjectWithCaptionMetadata } from '#lib/image/image-featured.ts';

import ImageHeroCarouselCaption from '#components/image-hero/image-hero-carousel-caption.astro';
import ImagePlaceholder from '#components/image/image-placeholder.astro';
import { IMAGE_FORMAT, IMAGE_QUALITY } from '#constants.ts';
import { getImageById } from '#lib/collections/images/utils.ts';
import { getImageSrcsetWidths } from '#lib/image/image-layout.ts';
import { getImagePlaceholderDataUrlHq } from '#lib/image/image-placeholder.ts';
import { sanitizeAltAttribute } from '#lib/utils/text.ts';

interface Props extends ImageFeaturedObjectWithCaptionMetadata {
	index: number;
}

const { index, id: imageId, title: alt = '', captionMetadata } = Astro.props;

const imageEntry = await getImageById(imageId);

const imageProps = imageEntry
	? ({
			src: imageEntry.data.src,
			alt: sanitizeAltAttribute(alt),
			width: imageEntry.data.width,
			height: imageEntry.data.height,
			widths: getImageSrcsetWidths({ maxWidth: imageEntry.data.width }),
			sizes: '100vw',
			format: IMAGE_FORMAT,
			quality: IMAGE_QUALITY,
			...(index === 0
				? { loading: 'eager', decoding: 'sync', fetchpriority: 'high' }
				: { loading: 'lazy', decoding: 'async', fetchpriority: 'low' }),
		} satisfies RemoteImageProps)
	: undefined;

const placeholder = imageEntry
	? await getImagePlaceholderDataUrlHq(imageEntry.data.src)
	: undefined;

// TODO: carousel items should have a visual indicator to show they can be scrolled through
---

{
	imageProps ? (
		<ImagePlaceholder class="carousel-item relative" placeholder={placeholder}>
			<Image
				class:list={[
					'max-h-screen min-h-[400px] w-screen object-cover object-center text-sm text-transparent xl:min-h-screen',
				]}
				style={{ zIndex: 10 }}
				{...(index === 0 ? { 'data-pagefind-meta': 'image[src], image_alt[alt]' } : {})}
				{...imageProps}
			/>
			{captionMetadata ? <ImageHeroCarouselCaption captionMetadata={captionMetadata} /> : undefined}
		</ImagePlaceholder>
	) : undefined
}
