---
import type { Page } from 'astro';

import Link from '@/components/parts/link.astro';
import { getTranslations } from '@/lib/utils/i18n';
import { getPaginationData } from '@/lib/utils/pagination';

interface Props {
	class?: string | undefined;
	page: Page;
}

const { class: className, page } = Astro.props;

const { getPageNumberLink, pagePrevLink, pageNextLink, pageArray } = getPaginationData({ page });

// Hide midpoint numbers on smaller viewports; only triggered when midpoint numbers exist
let isMidpointNumbers = false;

const t = getTranslations();
---

{
	pagePrevLink || pageNextLink ? (
		<nav class:list={[className]} aria-label="pagination">
			<ul
				class:list={[
					'flex flex-wrap gap-4 text-base font-medium tabular-nums md:gap-1 md:text-sm',
					page.lastPage >= 10 ? 'justify-between' : undefined,
				]}
			>
				{pagePrevLink ? (
					<li class="flex flex-wrap gap-1 pr-2">
						<span class="select-none text-accent-300">&lsaquo;</span>
						<Link href={pagePrevLink}>{t('pagination.previous')}</Link>
					</li>
				) : undefined}
				{pageArray.map((pageNumber) => {
					switch (pageNumber) {
						case -1: {
							isMidpointNumbers = !isMidpointNumbers;

							return (
								<li
									class:list={[
										'text-primary-300',
										isMidpointNumbers ? 'hidden md:block' : undefined,
									]}
								>
									&#x22EF;
								</li>
							);
						}
						case page.currentPage: {
							return (
								<li class="px-2 font-bold first:pl-0 last:pr-0" aria-current="page">
									{String(pageNumber)}
								</li>
							);
						}
						default: {
							return (
								<li
									class:list={[
										'first:-ml-2 last:-mr-2',
										isMidpointNumbers ? 'hidden md:block' : undefined,
									]}
								>
									<Link href={getPageNumberLink(pageNumber)} class="px-2">
										{String(pageNumber)}
									</Link>
								</li>
							);
						}
					}
				})}
				{pageNextLink ? (
					<li class="flex flex-wrap gap-1 pl-2">
						<Link href={pageNextLink}>{t('pagination.next')}</Link>
						<span class="select-none text-accent-300">&rsaquo;</span>
					</li>
				) : undefined}
			</ul>
		</nav>
	) : undefined
}
