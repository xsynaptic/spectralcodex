---
import type { HTMLTag, Polymorphic } from 'astro/types';

type GradientColor =
	| 'primary'
	| 'primary-bright'
	| 'primary-featured'
	| 'highlight'
	| 'highlight-bright'
	| 'accent'
	| 'accent-bright'
	| 'accent-featured';

type Props<Tag extends HTMLTag = HTMLTag> = Polymorphic<{
	as: Tag;
	gradientColor?: GradientColor;
}>;

const { as: Tag = 'div', class: className, gradientColor = 'primary' } = Astro.props;
---

<Tag
	class:list={[
		'bg-gradient-to-b bg-clip-text text-transparent',
		gradientColor === 'primary'
			? 'from-primary-800 to-primary-600 dark:from-primary-100 dark:to-primary-300'
			: undefined,
		gradientColor === 'primary-bright'
			? 'from-primary-50 to-primary-200 text-primary-500'
			: undefined,
		gradientColor === 'primary-featured'
			? 'from-primary-800 to-primary-600 text-primary-300 sm:from-primary-50 sm:to-primary-200'
			: undefined,
		gradientColor === 'highlight'
			? 'from-highlight-600 to-highlight-800 text-primary-300'
			: undefined,
		gradientColor === 'highlight-bright'
			? 'from-highlight-50 to-highlight-200 text-primary-500'
			: undefined,
		gradientColor === 'accent' ? 'from-accent-500 to-accent-600 text-primary-300' : undefined,
		gradientColor === 'accent-bright'
			? 'from-accent-100 to-accent-300 text-primary-500'
			: undefined,
		gradientColor === 'accent-featured'
			? 'from-accent-500 to-accent-600 text-primary-300 sm:from-accent-100 sm:to-accent-300'
			: undefined,
		className,
	]}><slot /></Tag
>
