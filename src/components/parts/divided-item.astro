---
import type { HTMLTag, Polymorphic } from 'astro/types';

const DividerColorEnum = {
	Default: 'default',
	Lighter: 'lighter',
	Darker: 'darker',
	Hero: 'hero',
} as const;

export type DividerColor = (typeof DividerColorEnum)[keyof typeof DividerColorEnum];

export type DividerContent = 'bar' | 'bullet' | 'chevron' | 'dot' | 'slash';

type Props<Tag extends HTMLTag = HTMLTag> = Polymorphic<{
	as: Tag;
	class?: string | undefined;
	dividerColor?: DividerColor | undefined;
	dividerContent?: DividerContent | undefined;
	showDarkMode?: boolean | undefined;
}>;

const {
	as: Tag = 'div',
	class: className,
	dividerColor = 'default',
	dividerContent = 'slash',
	showDarkMode = true,
	...props
} = Astro.props;
---

<Tag
	class:list={[
		'divider-after inline-flex gap-1 last:after:content-none',
		dividerColor === DividerColorEnum.Default && showDarkMode
			? 'after:text-primary-400 dark:after:text-primary-500'
			: undefined,
		dividerColor === DividerColorEnum.Default && !showDarkMode
			? 'after:text-primary-400'
			: undefined,
		dividerColor === DividerColorEnum.Darker
			? 'after:text-primary-500 dark:after:text-primary-700'
			: undefined,
		dividerColor === DividerColorEnum.Lighter
			? 'after:text-primary-300 dark:after:text-primary-600'
			: undefined,
		dividerColor === DividerColorEnum.Hero
			? 'after:text-primary-500 sm:after:text-primary-300 dark:after:text-primary-400 dark:sm:after:text-primary-700 sm:after:opacity-80'
			: undefined,
		dividerContent === 'bar' ? 'after:content-(--content-bar)' : undefined,
		dividerContent === 'bullet' ? 'after:content-(--content-bullet)' : undefined,
		dividerContent === 'chevron' ? 'after:content-(--content-chevron)' : undefined,
		dividerContent === 'dot' ? 'after:content-(--content-dot)' : undefined,
		dividerContent === 'slash' ? 'after:content-(--content-slash)' : undefined,
		className,
	]}
	{...props}
>
	<slot />
</Tag>
