---
import type { MapComponentProps } from '@spectralcodex/react-map-component';
import type { HTMLAttributes } from 'astro/types';

import { ReactMapComponent } from '@spectralcodex/react-map-component';
import { MAP_ICONS_PATH } from 'astro:env/client';

import MapComponentSprites from '#components/map/map-component-sprites.astro';
import '#styles/map.css';
import { FEATURE_MAP_ICONS } from '#constants.ts';

interface Props extends HTMLAttributes<'div'> {
	mapId?: string | undefined;
	mapComponentProps: MapComponentProps;
}

const { mapId, mapComponentProps, ...props } = Astro.props;

const spritesUrl =
	FEATURE_MAP_ICONS && MAP_ICONS_PATH ? new URL(MAP_ICONS_PATH, Astro.site).href : undefined;
---

<MapComponentSprites />

<div
	class:list={['bg-fallback', 'relative flex h-full sm:rounded-xs lg:rounded-md']}
	style={{ maxHeight: '100vh', minHeight: 'min(600px,100vh)', overflow: 'hidden' }}
	{...props}
	data-pagefind-ignore
>
	{
		mapId ? (
			<ReactMapComponent
				style={{ zIndex: 20 }}
				{...(spritesUrl ? { spritesId: 'custom', spritesUrl } : {})}
				{...mapComponentProps}
				client:visible
				transition:persist={mapId}
			/>
		) : (
			<ReactMapComponent style={{ zIndex: 20 }} {...mapComponentProps} client:visible />
		)
	}
	<div
		class="text-primary-700 dark:text-highlight-400 absolute flex h-full w-full justify-center"
		style={{ zIndex: 10 }}
	>
		<div class="loading-animation" style={{ width: '20%' }}></div>
	</div>
</div>
