---
import * as R from 'remeda';

import ContentSection from '@/components/content/content-section.astro';
import FormatCjk from '@/components/format/format-cjk.astro';
import ListRow from '@/components/list/list-row.astro';
import DividedItem from '@/components/parts/divided-item.astro';
import Link from '@/components/parts/link.astro';
import { getThemesByIdsFunction, sortThemesByContentCount } from '@/lib/collections/themes/utils';
import { getTranslations } from '@/lib/utils/i18n';
import { getContentUrl } from '@/lib/utils/routing';

interface Props {
	themeIds: string[] | undefined;
}

const { themeIds } = Astro.props;

const getThemesByIds = await getThemesByIdsFunction();

const themes = themeIds
	? R.pipe(themeIds, getThemesByIds, R.sort(sortThemesByContentCount))
	: undefined;

const t = getTranslations();
---

{
	themes && themes.length > 0 ? (
		<ContentSection>
			<Fragment slot="section-title">{t('collection.themes.labelPlural')}</Fragment>
			<ListRow>
				{themes.map((item) => (
					<DividedItem as="li" class="font-serif text-sm after:text-sm after:font-light">
						<span>
							{item.data.title ? (
								<Link href={getContentUrl(item.collection, item.id)}>{item.data.title.trim()}</Link>
							) : undefined}
							{item.data.titleAlt ? (
								<>
									{' '}
									<span>
										<FormatCjk>({item.data.titleAlt})</FormatCjk>
									</span>
								</>
							) : undefined}
						</span>
					</DividedItem>
				))}
			</ListRow>
		</ContentSection>
	) : undefined
}
