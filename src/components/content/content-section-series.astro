---
import type { CollectionEntry } from 'astro:content';

import { render } from 'astro:content';

import ContentSection from '#components/content/content-section.astro';
import FormatCjk from '#components/format/format-cjk.astro';
import ListColumnItem from '#components/list/list-column-item.astro';
import ListColumn from '#components/list/list-column.astro';
import Link from '#components/parts/link.astro';
import ProseDescription from '#components/parts/prose-description.astro';
import { getSeriesByIdFunction } from '#lib/collections/series/utils.ts';
import { getTranslations } from '#lib/utils/i18n.ts';

const t = getTranslations();

interface Props {
	entry: CollectionEntry<'locations' | 'posts'>;
}

const { entry } = Astro.props;

const getSeriesById = await getSeriesByIdFunction();

const seriesData = getSeriesById({ collection: entry.collection, id: entry.id });
---

{
	seriesData.length > 0
		? seriesData.map(async ({ entry, metadataItems }) => {
				const { Content } = await render(entry);

				return metadataItems.length > 0 ? (
					<ContentSection data-pagefind-ignore>
						<Fragment slot="section-title">
							{t('collection.series.labelPlural')}:{' '}
							<span data-pagefind-filter="series">{entry.data.title}</span>
						</Fragment>
						<ProseDescription showCompact={true}>
							<Content />
						</ProseDescription>
						<ListColumn class="mt-small font-serif text-xs md:text-sm">
							{metadataItems.map(({ url, title, titleAlt }) => (
								<ListColumnItem>
									<Link href={url}>{title}</Link>
									{titleAlt ? (
										<span>
											<FormatCjk>({titleAlt})</FormatCjk>
										</span>
									) : undefined}
								</ListColumnItem>
							))}
						</ListColumn>
					</ContentSection>
				) : undefined;
			})
		: undefined
}
