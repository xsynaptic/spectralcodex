---
import type { CollectionEntry } from 'astro:content';

import ContentSection from '#components/content/content-section.astro';
import FormatCjk from '#components/format/format-cjk.astro';
import ListColumnItem from '#components/list/list-column-item.astro';
import ListColumn from '#components/list/list-column.astro';
import Link from '#components/parts/link.astro';
import { getTranslations } from '#lib/utils/i18n.ts';
import { getMultilingualValue } from '#lib/schemas/i18n.ts';

interface Props {
	entry: CollectionEntry<'locations' | 'posts' | 'regions' | 'themes'>;
}

const { entry, ...props } = Astro.props;

const links =
	'links' in entry.data && entry.data.links && entry.data.links.length > 0
		? entry.data.links
		: undefined;
const sources =
	'sources' in entry.data && entry.data.sources && entry.data.sources.length > 0
		? entry.data.sources
		: undefined;

const t = getTranslations();
---

{
	links || sources ? (
		<ContentSection data-pagefind-ignore {...props}>
			<Fragment slot="section-title">{t('content.section.links.sources')}</Fragment>
			<ListColumn class="font-serif text-xs sm:text-sm">
				{links?.map((link) => {
					const titleAlt = getMultilingualValue('title', link);

					return (
						<ListColumnItem>
							<Link href={link.url}>{link.title}</Link>
							{titleAlt ? (
								<span>
									<FormatCjk>({titleAlt})</FormatCjk>
								</span>
							) : undefined}
						</ListColumnItem>
					);
				})}
				{sources?.map((source) => {
					const titleAlt = getMultilingualValue('title', source);

					return (
						<ListColumnItem>
							<span class="italic">{source.title}</span>
							{titleAlt ? (
								<span>
									<FormatCjk>({titleAlt})</FormatCjk>
								</span>
							) : undefined}
							{'publisher' in source && source.publisher ? (
								<span>{source.publisher}</span>
							) : undefined}
							{'datePublished' in source && source.datePublished ? (
								<span>({source.datePublished})</span>
							) : undefined}
						</ListColumnItem>
					);
				})}
			</ListColumn>
		</ContentSection>
	) : undefined
}
