---
import * as R from 'remeda';

import Container from '@/components/parts/container.astro';
import MapComponent from '@/components/map/map-component.astro';
import { getLocationsByIdsFunction } from '@/lib/collections/locations/utils';
import { getMapData } from '@/lib/map/map-data';
import { getLocationsFeatureCollection } from '@/lib/map/map-locations';

interface Props {
	locations: Array<string>;
	languages?: Array<string> | undefined; // For controlling interface language
	showHidden: boolean;
}

const { locations: locationIds, languages, showHidden = false } = Astro.props;

// No map components in RSS allowed
const { isRss } = Astro.locals;

const getLocationsByReference = await getLocationsByIdsFunction();

// API endpoint is undefined because geodata *must* be inlined with this method
// We can't know in advance what locations are requested by content without a big performance hit
const { hasGeodata, ...mapComponentProps } = getMapData({
	featureCollection: R.pipe(locationIds, getLocationsByReference, (locations) =>
		getLocationsFeatureCollection(locations, { showHiddenLocations: showHidden })
	),
	mapApiBaseUrl: undefined,
	languages,
});
---

{
	hasGeodata && !isRss ? (
		<Container as="div" class="not-prose" fillViewport={true}>
			<MapComponent {...mapComponentProps} />
		</Container>
	) : undefined
}
