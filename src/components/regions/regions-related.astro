---
import type { CollectionEntry } from 'astro:content';

import * as R from 'remeda';

import Container from '#components/parts/container.astro';
import RegionsList from '#components/regions/regions-list.astro';
import {
	getRegionAncestorsFunction,
	getRegionsByIdsFunction,
} from '#lib/collections/regions/utils.ts';
import { filterWithContent, sortByContentCount } from '#lib/utils/collections.ts';
import { getTranslations } from '#lib/utils/i18n.ts';

interface Props {
	entry: CollectionEntry<'regions'>;
	limit?: number | undefined;
}

const { entry, limit = 12 } = Astro.props;

// Only show alternate titles above this depth; saves space for top-level regions
const SHOW_TITLE_ALT_DEPTH = 2;

const getRegionsByIds = await getRegionsByIdsFunction();
const getRegionAncestors = await getRegionAncestorsFunction();

function getRegionsRelatedByIds(ids: Array<string> | undefined, limit: number) {
	return ids
		? R.pipe(
				ids,
				getRegionsByIds,
				R.filter(filterWithContent),
				R.sort(sortByContentCount),
				R.take(limit)
			)
		: [];
}

const regionChildren = getRegionsRelatedByIds(entry.data.children, limit);
const regionSiblings = getRegionsRelatedByIds(entry.data.siblings, limit);

const depth = getRegionAncestors(entry).length;

const t = getTranslations();
---

{
	regionChildren.length > 0 || regionSiblings.length > 0 ? (
		<Container
			as="div"
			class="mb-4 flex flex-col items-start gap-4 sm:flex-row lg:gap-6"
			data-pagefind-ignore
		>
			{regionChildren.length > 0 ? (
				<div class="flex-1">
					<h3
						class:list={[
							'mb-1 text-xs font-semibold uppercase',
							'text-primary-700 dark:text-highlight-400',
						]}
					>
						<slot name="regions-children-title">{t('terms.related.children.label')}</slot>
					</h3>
					<RegionsList terms={regionChildren} showTitleAlt={depth >= SHOW_TITLE_ALT_DEPTH} />
				</div>
			) : undefined}
			{regionSiblings.length > 0 ? (
				<div class="flex-1">
					<h3
						class:list={[
							'mb-1 text-xs font-semibold uppercase',
							'text-primary-700 dark:text-highlight-400',
						]}
					>
						<slot name="regions-siblings-title">{t('terms.related.siblings.label')}</slot>
					</h3>
					<RegionsList terms={regionSiblings} showTitleAlt={depth >= SHOW_TITLE_ALT_DEPTH} />
				</div>
			) : undefined}
		</Container>
	) : undefined
}
