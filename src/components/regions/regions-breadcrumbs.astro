---
import type { CollectionEntry } from 'astro:content';

import type { DividerColor } from '#components/parts/divided-item.astro';

import ListRow from '#components/list/list-row.astro';
import DividedItem from '#components/parts/divided-item.astro';
import Link from '#components/parts/link.astro';
import { getRegionAncestorsFunction } from '#lib/collections/regions/utils.ts';
import { getTranslations } from '#lib/i18n/i18n-translations.ts';
import { getContentUrl } from '#lib/utils/routing.ts';

interface Props {
	entry: CollectionEntry<'regions'>;
	showCurrentLink?: boolean;
	showFeatured?: boolean;
	dividerColor?: DividerColor;
}

const {
	entry,
	showCurrentLink = false,
	showFeatured = false,
	dividerColor,
	...props
} = Astro.props;

const getRegionAncestors = await getRegionAncestorsFunction();

const termAncestors = getRegionAncestors(entry).reverse();

const t = getTranslations();
---

{
	termAncestors.length > 0 ? (
		<nav class="flex" aria-label={t('site.breadcrumbs.aria.label')} data-pagefind-ignore {...props}>
			<ListRow as="ol" class="text-sm">
				{termAncestors.map((termAncestor) => (
					<DividedItem
						dividerColor={dividerColor}
						dividerContent="chevron"
						aria-current={termAncestor.id === entry.id ? 'page' : undefined}
					>
						{!showCurrentLink && termAncestor.id === entry.id ? (
							termAncestor.data.title
						) : (
							<Link
								href={getContentUrl('regions', termAncestor.id)}
								linkColor={showFeatured ? 'accent-featured' : 'accent'}
							>
								{termAncestor.data.title}
							</Link>
						)}
					</DividedItem>
				))}
			</ListRow>
		</nav>
	) : undefined
}
