---
import type { CollectionEntry } from 'astro:content';

import ContentSection from '#components/content/content-section.astro';
import FormatMarkdown from '#components/format/format-markdown.astro';
import AlertBox from '#components/parts/alert-box.astro';
import { getTranslations } from '#lib/utils/i18n.ts';

interface Props {
	entry: CollectionEntry<'locations'>;
}

const { entry, ...props } = Astro.props;

const showDangerNotice = entry.data.safety
	? entry.data.safety <= 2
	: ['abandoned', 'idle', 'remnants'].includes(entry.data.status);
const showDemolishedNotice = entry.data.status === 'demolished';

const t = getTranslations();
---

{
	showDangerNotice && !showDemolishedNotice ? (
		<ContentSection data-pagefind-ignore {...props}>
			<AlertBox status="warning" class="mb-small">
				<FormatMarkdown>{t('notice.danger')}</FormatMarkdown>
			</AlertBox>
		</ContentSection>
	) : undefined
}
{
	showDemolishedNotice ? (
		<ContentSection data-pagefind-ignore {...props}>
			<AlertBox status="error" class="mb-small">
				<FormatMarkdown>{t('notice.demolished')}</FormatMarkdown>
			</AlertBox>
		</ContentSection>
	) : undefined
}
