---
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';

import * as R from 'remeda';

import RegionIndex from '#layouts/region-index.astro';
import { getRegionsCollection } from '#lib/collections/regions/data.ts';
import { getContentMetadataFunction } from '#lib/metadata/metadata-items.ts';
import { filterWithContent, sortByContentCount } from '#lib/utils/collections.ts';

export const getStaticPaths = (async ({ paginate }) => {
	const { regions } = await getRegionsCollection();

	const getContentMetadata = await getContentMetadataFunction();

	const metadataItems = R.pipe(
		regions,
		R.filter(({ data }) => data.parent === undefined), // Only ancestral terms
		R.filter(filterWithContent),
		R.sort(sortByContentCount),
		getContentMetadata
	);

	return paginate(metadataItems, { pageSize: 20 });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
---

<RegionIndex {...Astro.props} />
