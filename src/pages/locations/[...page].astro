---
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';

import * as R from 'remeda';

import { getLocationsCollection } from '#lib/collections/locations/data.ts';
import { getContentMetadataFunction } from '#lib/metadata/metadata-items.ts';
import { sortContentMetadataByDate } from '#lib/metadata/metadata-utils.ts';
import { getFilterEntryQualityFunction } from '#lib/utils/collections.ts';
import LocationIndex from '#layouts/location-index.astro';

export const getStaticPaths = (async ({ paginate }) => {
	const { locations } = await getLocationsCollection();

	const getContentMetadata = await getContentMetadataFunction();

	const metadataItems = R.pipe(
		locations,
		R.filter(getFilterEntryQualityFunction(2)),
		R.filter((item) => !!item.data.imageFeatured),
		getContentMetadata,
		R.sort(sortContentMetadataByDate)
	);

	return paginate(metadataItems, { pageSize: 20 });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
---

<LocationIndex {...Astro.props} />
