---
import type { Page } from 'astro';

import { render } from 'astro:content';

import ContentDate from '#components/content/content-date.astro';
import ContentExcerpt from '#components/content/content-excerpt.astro';
import ContentHeader from '#components/content/content-header.astro';
import ContentSection from '#components/content/content-section.astro';
import FormatMarkdown from '#components/format/format-markdown.astro';
import MainSite from '#components/main/main-site.astro';
import PaginationCounter from '#components/pagination/pagination-counter.astro';
import Pagination from '#components/pagination/pagination.astro';
import Container from '#components/parts/container.astro';
import { getTranslations } from '#lib/i18n/i18n-translations.ts';
import { DatePresetEnum } from '#lib/utils/date.ts';
import { getContentUrl } from '#lib/utils/routing.ts';

interface Props {
	page: Page;
}

const { page } = Astro.props;

const t = getTranslations();

const title = t('collection.ephemera.labelPlural');
const description = t('collection.ephemera.description');
---

<MainSite meta={{ title, description }}>
	<ContentHeader>
		<Fragment slot="header-title">{title}</Fragment>
		<Fragment slot="header-title-info"><PaginationCounter page={page} /></Fragment>
	</ContentHeader>
	<ContentSection>
		<Fragment slot="section-description">
			{page.currentPage === 1 ? <FormatMarkdown>{description}</FormatMarkdown> : undefined}
		</Fragment>
	</ContentSection>
	{
		page.data.length > 0
			? page.data.map(async (entry, index) => {
					const { Content } = await render(entry);

					return (
						<div>
							<ContentExcerpt
								entryUrl={getContentUrl(entry.collection, entry.id)}
								class="mb-medium"
							>
								<Fragment slot="excerpt-title">{entry.data.title}</Fragment>
								<Fragment slot="excerpt-subtitle">
									<ContentDate
										date={entry.data.dateCreated}
										dateUpdated={entry.data.dateUpdated}
										datePreset={DatePresetEnum.Medium}
									/>
								</Fragment>
								<Content />
							</ContentExcerpt>
							{index + 1 < page.data.length ? (
								<Container as="div">
									<hr class="mb-medium text-primary-200 dark:text-primary-700" />
								</Container>
							) : undefined}
						</div>
					);
				})
			: undefined
	}
	<ContentSection>
		<Pagination class="mt-small md:mt-medium" page={page} />
	</ContentSection>
</MainSite>
