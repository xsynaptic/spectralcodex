---
import type { MapComponentData } from '@spectralcodex/react-map-component';
import type { Page } from 'astro';
import type { CollectionEntry } from 'astro:content';

import type { ContentMetadataItem } from '#lib/metadata/metadata-types.ts';

import ContentCollectionLink from '#components/content/content-collection-link.astro';
import ContentDescription from '#components/content/content-description.astro';
import ContentHeader from '#components/content/content-header.astro';
import ContentSectionMap from '#components/content/content-section-map.astro';
import ContentSectionPreviewGrid from '#components/content/content-section-preview-grid.astro';
import ImageHeroCarousel from '#components/image-hero/image-hero-carousel.astro';
import MainSite from '#components/main/main-site.astro';
import Multilingual from '#components/parts/multilingual.astro';
import { getPrimaryMultilingualContent } from '#lib/i18n/i18n-utils.ts';
import { getImageSetMetadata } from '#lib/image/image-set.ts';
import { getPagefindBodyProp } from '#lib/utils/pagefind.ts';
import { getSeoHideSearch, getSeoImageProps } from '#lib/utils/seo.ts';

interface Props {
	entry: CollectionEntry<'series'>;
	mapData: MapComponentData;
	page: Page<ContentMetadataItem>;
}

const { entry, mapData, page } = Astro.props;

const titleMultilingual = getPrimaryMultilingualContent(entry.data, 'title');

const imageSetMetadata = await getImageSetMetadata({
	imageSet: entry.data.imageSet,
	shuffle: true,
});

const hasHeroImage = !!imageSetMetadata && imageSetMetadata.length > 0;
---

<MainSite
	meta={{
		title: titleMultilingual
			? `${entry.data.title} (${titleMultilingual.value})`
			: entry.data.title,
		description: entry.data.description ?? entry.body ?? undefined,
		image: getSeoImageProps({
			...(hasHeroImage ? { id: `${entry.collection}/${entry.id}` } : {}),
			alt: entry.data.title,
		}),
		...getSeoHideSearch(entry.data.hideSearch),
		prefetchUrls: mapData.prefetchUrls,
	}}
	hasHeroImage={hasHeroImage}
>
	<article {...getPagefindBodyProp(!!entry.data.hideSearch || page.currentPage !== 1)}>
		{
			hasHeroImage ? (
				<ImageHeroCarousel imageSet={imageSetMetadata} class="sm:mb-small">
					<ContentHeader showFeatured={true}>
						<Fragment slot="header-title">{entry.data.title}</Fragment>
						<Fragment slot="header-title-multilingual">
							<Multilingual content={titleMultilingual} />
						</Fragment>
						<Fragment slot="header-subtitle">
							<ContentCollectionLink collection={entry.collection} showFeatured={true} />
						</Fragment>
					</ContentHeader>
				</ImageHeroCarousel>
			) : (
				<ContentHeader>
					<Fragment slot="header-title">{entry.data.title}</Fragment>
					<Fragment slot="header-title-multilingual">
						<Multilingual content={titleMultilingual} />
					</Fragment>
					<Fragment slot="header-subtitle">
						<ContentCollectionLink collection={entry.collection} />
					</Fragment>
				</ContentHeader>
			)
		}
		<ContentDescription entry={entry} />
		<ContentSectionPreviewGrid page={page} />
		<ContentSectionMap mapData={mapData} persistId={`series-${entry.id}`} />
	</article>
</MainSite>
