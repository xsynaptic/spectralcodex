---
import type { MapComponentData } from '@spectralcodex/react-map-component';
import type { CollectionEntry } from 'astro:content';

import { render } from 'astro:content';

import ContentCollectionLink from '#components/content/content-collection-link.astro';
import ContentDate from '#components/content/content-date.astro';
import ContentHeader from '#components/content/content-header.astro';
import ContentSectionBacklinks from '#components/content/content-section-backlinks.astro';
import ContentSectionLinks from '#components/content/content-section-links.astro';
import ContentSectionMap from '#components/content/content-section-map.astro';
import ContentSectionRegions from '#components/content/content-section-regions.astro';
import ContentSectionRelated from '#components/content/content-section-related.astro';
import ContentSectionSeries from '#components/content/content-section-series.astro';
import ContentSectionSources from '#components/content/content-section-sources.astro';
import ContentSectionThemes from '#components/content/content-section-themes.astro';
import ImageHero from '#components/image-hero/image-hero.astro';
import MainSite from '#components/main/main-site.astro';
import DividedItem from '#components/parts/divided-item.astro';
import Multilingual from '#components/parts/multilingual.astro';
import ProseBody from '#components/parts/prose-body.astro';
import { getPrimaryMultilingualContent } from '#lib/i18n/i18n-utils.ts';
import { getPagefindBodyProp } from '#lib/utils/pagefind.ts';
import { getSeoArticleProps, getSeoHideSearch, getSeoImageProps } from '#lib/utils/seo.ts';

interface Props {
	entry: CollectionEntry<'posts'>;
	mapData: MapComponentData;
}

const { entry, mapData } = Astro.props;

const titleMultilingual = getPrimaryMultilingualContent(entry.data, 'title');

const regionIds = entry.data.regions?.map(({ id }) => id);
const themeIds = entry.data.themes?.map(({ id }) => id);

const { Content } = await render(entry);
---

<MainSite
	meta={{
		title: titleMultilingual
			? `${entry.data.title} (${titleMultilingual.value})`
			: entry.data.title,
		description: entry.data.description ?? entry.body ?? undefined,
		image: getSeoImageProps({
			...(entry.data.imageFeatured ? { id: entry.id } : { fallback: 'og-image-post' }),
			alt: entry.data.title,
		}),
		...getSeoArticleProps({
			dateCreated: entry.data.dateCreated,
			dateUpdated: entry.data.dateUpdated,
		}),
		...getSeoHideSearch(entry.data.hideSearch),
		prefetchUrls: mapData.prefetchUrls,
	}}
	hasHeroImage={!!entry.data.imageHero}
>
	<article {...getPagefindBodyProp(entry.data.hideSearch)}>
		{
			entry.data.imageHero ? (
				<ImageHero imageId={entry.data.imageHero} alt={entry.data.title} class="sm:mb-small">
					<ContentHeader showFeatured={true}>
						<Fragment slot="header-title">{entry.data.title}</Fragment>
						<Fragment slot="header-title-multilingual">
							<Multilingual content={titleMultilingual} />
						</Fragment>
						<Fragment slot="header-subtitle">
							<DividedItem dividerColor="hero">
								<ContentCollectionLink collection="posts" showFeatured={true} />
							</DividedItem>
							<DividedItem dividerColor="hero">
								<ContentDate
									date={entry.data.dateCreated}
									dateUpdated={entry.data.dateUpdated}
									datePreset="long"
								/>
							</DividedItem>
						</Fragment>
					</ContentHeader>
				</ImageHero>
			) : (
				<ContentHeader>
					<Fragment slot="header-title">{entry.data.title}</Fragment>
					<Fragment slot="header-title-multilingual">
						<Multilingual content={titleMultilingual} />
					</Fragment>
					<Fragment slot="header-subtitle">
						<DividedItem>
							<ContentCollectionLink collection="posts" />
						</DividedItem>
						<DividedItem>
							<ContentDate
								date={entry.data.dateCreated}
								dateUpdated={entry.data.dateUpdated}
								datePreset="long"
							/>
						</DividedItem>
					</Fragment>
				</ContentHeader>
			)
		}
		<ProseBody class="pb-small" data-reading-frame>
			<Content />
		</ProseBody>
		<ContentSectionLinks entry={entry} />
		<ContentSectionSources entry={entry} />
		<ContentSectionThemes themeIds={themeIds} />
		<ContentSectionRegions regionIds={regionIds} />
		<ContentSectionBacklinks entry={entry} />
		<ContentSectionSeries entry={entry} />
		<ContentSectionMap mapData={mapData} />
		<ContentSectionRelated entry={entry} />
	</article>
</MainSite>
