---
import type { CollectionEntry } from 'astro:content';

import { render } from 'astro:content';

import ContentDate from '#components/content/content-date.astro';
import ContentHeader from '#components/content/content-header.astro';
import ImageHero from '#components/image-hero/image-hero.astro';
import MainSite from '#components/main/main-site.astro';
import Multilingual from '#components/parts/multilingual.astro';
import ProseBody from '#components/parts/prose-body.astro';
import { getPrimaryMultilingualContent } from '#lib/i18n/i18n-utils.ts';
import { getPagefindBodyProp } from '#lib/utils/pagefind.ts';
import { getSeoHideSearch, getSeoImageProps } from '#lib/utils/seo.ts';

interface Props {
	entry: CollectionEntry<'pages'>;
}

const { entry } = Astro.props;

const titleMultilingual = getPrimaryMultilingualContent(entry.data, 'title');

const { Content } = await render(entry);
---

<MainSite
	meta={{
		title: entry.data.title,
		description: entry.data.description,
		image: getSeoImageProps({
			...(entry.data.imageFeatured ? { id: entry.id } : {}),
			alt: entry.data.title,
		}),
		...getSeoHideSearch(entry.data.hideSearch),
	}}
	hasHeroImage={!!entry.data.imageHero}
>
	<article {...getPagefindBodyProp(entry.data.hideSearch)}>
		{
			entry.data.imageHero ? (
				<ImageHero imageId={entry.data.imageHero} alt={entry.data.title} class="sm:mb-small">
					<ContentHeader showFeatured={true}>
						<Fragment slot="header-title">{entry.data.title}</Fragment>
						<Fragment slot="header-title-multilingual">
							<Multilingual content={titleMultilingual} />
						</Fragment>
						<Fragment slot="header-subtitle">
							<ContentDate
								date={entry.data.dateCreated}
								dateUpdated={entry.data.dateUpdated}
								datePreset="long"
							/>
						</Fragment>
					</ContentHeader>
				</ImageHero>
			) : (
				<ContentHeader>
					<Fragment slot="header-title">{entry.data.title}</Fragment>
					<Fragment slot="header-title-multilingual">
						<Multilingual content={titleMultilingual} />
					</Fragment>
					<Fragment slot="header-subtitle">
						<ContentDate
							date={entry.data.dateCreated}
							dateUpdated={entry.data.dateUpdated}
							datePreset="long"
						/>
					</Fragment>
				</ContentHeader>
			)
		}
		<ProseBody class="pb-small" data-reading-frame>
			<Content />
		</ProseBody>
	</article>
</MainSite>
