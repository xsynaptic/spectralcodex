---
description: JavaScript/TypeScript Standards
globs: *.ts, *.tsx, *.astro
---
# TypeScript coding standards

- Use "function" keyword for pure functions.
- Use TypeScript for all code. 
- Prefer interfaces over types. 
- Avoid TypeScript enums altogether, use maps or objects with "as const".
- Prefer `satisfies` over type assertions. 
- Optimize for code readability over conciseness.
- Always use full, descriptive variable names.
- Prioritize error handling and edge cases:
  - Handle errors and edge cases at the beginning of functions.
  - Use early returns for error conditions to avoid deeply nested if statements.
  - Place the happy path last in the function for improved readability.
- Avoid unnecessary else statements; use if-return pattern instead.
- Use guard clauses to handle preconditions and invalid states early.
- Implement proper error logging and user-friendly error messages, but keep in mind that this is an Astro project, so build, server, and client environments need to be considered.
- Consider using custom error types or error factories for consistent error handling.
- Make efficient use of switch statements where appropriate.
